/*
 * This file is generated by jOOQ.
 */
package com.ftpix.sss.dsl.tables.records;


import com.ftpix.sss.dsl.tables.SchemaVersion;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaVersionRecord extends UpdatableRecordImpl<SchemaVersionRecord> implements Record1<Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sss.SCHEMA_VERSION.CURRENT</code>.
     */
    public void setCurrent(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sss.SCHEMA_VERSION.CURRENT</code>.
     */
    public Integer getCurrent() {
        return (Integer) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<Integer> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<Integer> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SchemaVersion.SCHEMA_VERSION.CURRENT;
    }

    @Override
    public Integer component1() {
        return getCurrent();
    }

    @Override
    public Integer value1() {
        return getCurrent();
    }

    @Override
    public SchemaVersionRecord value1(Integer value) {
        setCurrent(value);
        return this;
    }

    @Override
    public SchemaVersionRecord values(Integer value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchemaVersionRecord
     */
    public SchemaVersionRecord() {
        super(SchemaVersion.SCHEMA_VERSION);
    }

    /**
     * Create a detached, initialised SchemaVersionRecord
     */
    public SchemaVersionRecord(Integer current) {
        super(SchemaVersion.SCHEMA_VERSION);

        setCurrent(current);
    }
}
