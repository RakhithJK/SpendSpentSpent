/*
 * This file is generated by jOOQ.
 */
package com.ftpix.sss.dsl.tables.records;


import com.ftpix.sss.dsl.tables.ResetPassword;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResetPasswordRecord extends UpdatableRecordImpl<ResetPasswordRecord> implements Record3<String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sss.RESET_PASSWORD.ID</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sss.RESET_PASSWORD.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sss.RESET_PASSWORD.USER_ID</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sss.RESET_PASSWORD.USER_ID</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sss.RESET_PASSWORD.EXPIRYDATE</code>.
     */
    public void setExpirydate(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>sss.RESET_PASSWORD.EXPIRYDATE</code>.
     */
    public Long getExpirydate() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ResetPassword.RESET_PASSWORD.ID;
    }

    @Override
    public Field<String> field2() {
        return ResetPassword.RESET_PASSWORD.USER_ID;
    }

    @Override
    public Field<Long> field3() {
        return ResetPassword.RESET_PASSWORD.EXPIRYDATE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public Long component3() {
        return getExpirydate();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public Long value3() {
        return getExpirydate();
    }

    @Override
    public ResetPasswordRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ResetPasswordRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public ResetPasswordRecord value3(Long value) {
        setExpirydate(value);
        return this;
    }

    @Override
    public ResetPasswordRecord values(String value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResetPasswordRecord
     */
    public ResetPasswordRecord() {
        super(ResetPassword.RESET_PASSWORD);
    }

    /**
     * Create a detached, initialised ResetPasswordRecord
     */
    public ResetPasswordRecord(String id, String userId, Long expirydate) {
        super(ResetPassword.RESET_PASSWORD);

        setId(id);
        setUserId(userId);
        setExpirydate(expirydate);
    }
}
