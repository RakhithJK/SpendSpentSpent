/*
 * This file is generated by jOOQ.
 */
package com.ftpix.sss.dsl.tables.records;


import com.ftpix.sss.dsl.tables.YearlyHistory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class YearlyHistoryRecord extends UpdatableRecordImpl<YearlyHistoryRecord> implements Record4<String, Long, Double, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sss.YEARLY_HISTORY.ID</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sss.YEARLY_HISTORY.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sss.YEARLY_HISTORY.CATEGORY_ID</code>.
     */
    public void setCategoryId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>sss.YEARLY_HISTORY.CATEGORY_ID</code>.
     */
    public Long getCategoryId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>sss.YEARLY_HISTORY.TOTAL</code>.
     */
    public void setTotal(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>sss.YEARLY_HISTORY.TOTAL</code>.
     */
    public Double getTotal() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>sss.YEARLY_HISTORY.DATE</code>.
     */
    public void setDate(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>sss.YEARLY_HISTORY.DATE</code>.
     */
    public Integer getDate() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Long, Double, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Long, Double, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return YearlyHistory.YEARLY_HISTORY.ID;
    }

    @Override
    public Field<Long> field2() {
        return YearlyHistory.YEARLY_HISTORY.CATEGORY_ID;
    }

    @Override
    public Field<Double> field3() {
        return YearlyHistory.YEARLY_HISTORY.TOTAL;
    }

    @Override
    public Field<Integer> field4() {
        return YearlyHistory.YEARLY_HISTORY.DATE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCategoryId();
    }

    @Override
    public Double component3() {
        return getTotal();
    }

    @Override
    public Integer component4() {
        return getDate();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCategoryId();
    }

    @Override
    public Double value3() {
        return getTotal();
    }

    @Override
    public Integer value4() {
        return getDate();
    }

    @Override
    public YearlyHistoryRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public YearlyHistoryRecord value2(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public YearlyHistoryRecord value3(Double value) {
        setTotal(value);
        return this;
    }

    @Override
    public YearlyHistoryRecord value4(Integer value) {
        setDate(value);
        return this;
    }

    @Override
    public YearlyHistoryRecord values(String value1, Long value2, Double value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached YearlyHistoryRecord
     */
    public YearlyHistoryRecord() {
        super(YearlyHistory.YEARLY_HISTORY);
    }

    /**
     * Create a detached, initialised YearlyHistoryRecord
     */
    public YearlyHistoryRecord(String id, Long categoryId, Double total, Integer date) {
        super(YearlyHistory.YEARLY_HISTORY);

        setId(id);
        setCategoryId(categoryId);
        setTotal(total);
        setDate(date);
    }
}
