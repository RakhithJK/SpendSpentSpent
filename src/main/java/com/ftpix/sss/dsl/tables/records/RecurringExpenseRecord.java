/*
 * This file is generated by jOOQ.
 */
package com.ftpix.sss.dsl.tables.records;


import com.ftpix.sss.dsl.tables.RecurringExpense;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecurringExpenseRecord extends UpdatableRecordImpl<RecurringExpenseRecord> implements Record9<Long, String, Long, Integer, Integer, String, String, Double, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.CATEGORY_ID</code>.
     */
    public void setCategoryId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.CATEGORY_ID</code>.
     */
    public Long getCategoryId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.TYPE</code>.
     */
    public void setType(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.TYPE</code>.
     */
    public Integer getType() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.TYPE_PARAM</code>.
     */
    public void setTypeParam(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.TYPE_PARAM</code>.
     */
    public Integer getTypeParam() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.LAST_OCCURRENCE</code>.
     */
    public void setLastOccurrence(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.LAST_OCCURRENCE</code>.
     */
    public String getLastOccurrence() {
        return (String) get(5);
    }

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.NEXT_OCCURRENCE</code>.
     */
    public void setNextOccurrence(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.NEXT_OCCURRENCE</code>.
     */
    public String getNextOccurrence() {
        return (String) get(6);
    }

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.AMOUNT</code>.
     */
    public void setAmount(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.AMOUNT</code>.
     */
    public Double getAmount() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>sss.RECURRING_EXPENSE.INCOME</code>.
     */
    public void setIncome(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>sss.RECURRING_EXPENSE.INCOME</code>.
     */
    public Byte getIncome() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, Long, Integer, Integer, String, String, Double, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, Long, Integer, Integer, String, String, Double, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RecurringExpense.RECURRING_EXPENSE.ID;
    }

    @Override
    public Field<String> field2() {
        return RecurringExpense.RECURRING_EXPENSE.NAME;
    }

    @Override
    public Field<Long> field3() {
        return RecurringExpense.RECURRING_EXPENSE.CATEGORY_ID;
    }

    @Override
    public Field<Integer> field4() {
        return RecurringExpense.RECURRING_EXPENSE.TYPE;
    }

    @Override
    public Field<Integer> field5() {
        return RecurringExpense.RECURRING_EXPENSE.TYPE_PARAM;
    }

    @Override
    public Field<String> field6() {
        return RecurringExpense.RECURRING_EXPENSE.LAST_OCCURRENCE;
    }

    @Override
    public Field<String> field7() {
        return RecurringExpense.RECURRING_EXPENSE.NEXT_OCCURRENCE;
    }

    @Override
    public Field<Double> field8() {
        return RecurringExpense.RECURRING_EXPENSE.AMOUNT;
    }

    @Override
    public Field<Byte> field9() {
        return RecurringExpense.RECURRING_EXPENSE.INCOME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getCategoryId();
    }

    @Override
    public Integer component4() {
        return getType();
    }

    @Override
    public Integer component5() {
        return getTypeParam();
    }

    @Override
    public String component6() {
        return getLastOccurrence();
    }

    @Override
    public String component7() {
        return getNextOccurrence();
    }

    @Override
    public Double component8() {
        return getAmount();
    }

    @Override
    public Byte component9() {
        return getIncome();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getCategoryId();
    }

    @Override
    public Integer value4() {
        return getType();
    }

    @Override
    public Integer value5() {
        return getTypeParam();
    }

    @Override
    public String value6() {
        return getLastOccurrence();
    }

    @Override
    public String value7() {
        return getNextOccurrence();
    }

    @Override
    public Double value8() {
        return getAmount();
    }

    @Override
    public Byte value9() {
        return getIncome();
    }

    @Override
    public RecurringExpenseRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord value3(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord value4(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord value5(Integer value) {
        setTypeParam(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord value6(String value) {
        setLastOccurrence(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord value7(String value) {
        setNextOccurrence(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord value8(Double value) {
        setAmount(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord value9(Byte value) {
        setIncome(value);
        return this;
    }

    @Override
    public RecurringExpenseRecord values(Long value1, String value2, Long value3, Integer value4, Integer value5, String value6, String value7, Double value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecurringExpenseRecord
     */
    public RecurringExpenseRecord() {
        super(RecurringExpense.RECURRING_EXPENSE);
    }

    /**
     * Create a detached, initialised RecurringExpenseRecord
     */
    public RecurringExpenseRecord(Long id, String name, Long categoryId, Integer type, Integer typeParam, String lastOccurrence, String nextOccurrence, Double amount, Byte income) {
        super(RecurringExpense.RECURRING_EXPENSE);

        setId(id);
        setName(name);
        setCategoryId(categoryId);
        setType(type);
        setTypeParam(typeParam);
        setLastOccurrence(lastOccurrence);
        setNextOccurrence(nextOccurrence);
        setAmount(amount);
        setIncome(income);
    }
}
